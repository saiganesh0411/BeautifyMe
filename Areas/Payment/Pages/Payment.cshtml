@page
@model BeautifyMe.Areas.Payment.Pages.PaymentModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Payment";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<div class="payment-container">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <h2 style="text-align: center; font-size:30px">Payment</h2>
    <div style="height:25px;"></div>
    <h5>Amount Payable: @Model.Input.TotalPrice$</h5>

    <form asp-page="Payment" method="post" id="paymentForm">
        <input asp-for="Input.SavedCards" type="hidden" />
        <input asp-for="Input.SelectedCardId" id="selectedCardId" type="hidden" />
        <input asp-for="Input.AddressId" id="selectedAddress" type="hidden" />

        <div style="padding-bottom:30px">
            <a id="addNewAddress" class="anchorLink" asp-page="address" asp-area="address" class="btn">Add Address</a>
        </div>
        
        <div class="form-group">
            <div class="address-row">
                @foreach (var address in Model.Input.UserAddresses)
                {
                    <div class="address-card">
                        <input type="checkbox" class="addressCheckbox" id="@address.AddressId" />
                        <label for="@address.AddressId">
                            <div class="address-text">
                                <div>@address.FirstName @address.LastName</div>
                                <div>@address.AddressLine1</div>
                                <div>@address.AddressLine2</div>
                                <div>@address.State - @address.ZipCode</div>
                            </div>
                        </label>
                    </div>
                }
            </div>
            <span asp-validation-for="Input.AddressId" class="text-danger"></span>
        </div>
        <div class="row emptyDiv"></div>
        <h3>Select Saved Cards</h3>
        <div>
            @if (Model.Input.SavedCards.Count > 0)
            {
                @foreach (var card in Model.Input.SavedCards)
                {
                    <div class="saved-card">
                        <input type="checkbox" class="savedCardCheckbox" id="@card.CardId" />
                       
                        <div class="card-details">
                            <label for="@card.CardId">@card.CardHolderName</label>
                            <div class="card-number">@card.MaskedCardNumber</div>
                            <div class="expiry-date">Expiry Date: @card.Expiry</div>
                        </div>
                    </div>
                }
                <div class="form-floating">
                    <input asp-for="Input.SelectedCardSecurity" id="ENC_SelectedCardSecurity" class="form-control" />
                    <label asp-for="Input.SelectedCardSecurity"></label>
                    <span asp-validation-for="Input.SelectedCardSecurity" class="text-danger"></span>
                </div>
            }
            else
            {
                <h5>No Saved Cards. Save cards for faster checkout.</h5>
            }

        </div>
        <div class="row emptyDiv"></div>
        <a id="addNewCardButton" class="anchorLink" asp-page="paymentnewcard" asp-area="paymentnewcard" class="btn">Add Card</a>
        <div class="row emptyDiv"></div>
        <div>
            <button type="submit" onclick="encryptAndSubmit(event)" class="btn btn-primary">Make Payment</button>
        </div>

    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <style>
        .payment-container {
            margin: 0 auto;
            max-width: 600px;
            padding: 20px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 5px;
            color: black;
        }

        .saved-card, .address-card {
            display: flex;
            margin: 10px 0;
            border: 1px solid #ddd;
            padding: 10px;
            background-color: #fff;
            font-size: 15px;
        }

            .saved-card input[type="checkbox"], .address-card input[type="checkbox"] {
                margin-right: 25px;
            }

        .card-details {
            flex: 1;
        }

        .anchorLink {
            color: #0d6efd;
            text-align: center;
            justify-content: center;
            align-items: center;
            display: flex;
            float: right;
        }

        /* Address card row */
        .address-row {
            display: flex;
            flex-wrap: wrap;
            margin: -5px; /* Negative margin to counteract padding */
        }

        .address-card {
            width: calc(50% - 10px); /* Adjust width for two cards per row with space between */
            box-sizing: border-box; /* Include padding and border in the width */
            padding: 10px; /* Add padding to space out the cards */
            margin-left: 5px;
            margin-right: 5px;
        }
    </style>

    <script type="text/javascript">
        $(document).ready(function () {
            var currentUrl = window.location.href;
            if (currentUrl.includes("isNotValid")) {
                showMessage('error', "Entered security code is not correct. Can not proceed with payment");
            }
            $('.savedCardCheckbox').on('click', function () {
                var checkbox = $(this);
                var id = $(this).attr('id');
                $('#selectedCardId').val(id);
                $('.savedCardCheckbox').not(this).prop('checked', false);
            });

            $('.addressCheckbox').on('click', function () {
                var checkbox = $(this);
                var id = $(this).attr('id');
                $('#selectedAddress').val(id);
                $('.addressCheckbox').not(this).prop('checked', false);
            });
        });

        function encryptAndSubmit(event) {
            var checkboxes = document.querySelectorAll('.savedCardCheckbox');
            var anyCheckboxSelected = Array.from(checkboxes).some(function (checkbox) {
                return checkbox.checked;
            });

            if (anyCheckboxSelected && $('#selectedAddress').val() !== '' && $('#selectedAddress').val() !== undefined) {
                encryptElement('ENC_SelectedCardSecurity');
            } else {
                event.preventDefault();
                showMessage('error', "Please select a card and address with which you want to proceed with payment. You can click on Add Card to enter card information and proceed with payment");
            }
        }
    </script>
}
